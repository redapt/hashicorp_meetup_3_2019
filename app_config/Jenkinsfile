pipeline{
    agent any
    stages{
        stage('Setup Docker'){
            steps {
                withCredentials([
                    azureServicePrincipal(
                        clientIdVariable: 'ARM_CLIENT_ID',
                        clientSecretVariable: 'ARM_CLIENT_SECRET', 
                        credentialsId: 'azure_demo_creds', 
                        subscriptionIdVariable: 'ARM_SUBSCRIPTION_ID', 
                        tenantIdVariable: 'ARM_TENANT_ID'),
                    usernamePassword(
                        credentialsId: 'dockerhub', 
                        passwordVariable: 'DOCKERHUB_SECRET', 
                        usernameVariable: 'DOCKERHUB_USER')
                    ])
                {
                    copyArtifacts filter: '**/*.tfvars', projectName: 'HashicorpMeetup', selector: lastSuccessful(), target: '.'

                    dir('app_config') {
                        sh '''
                            yes | terraform init
                        '''

                        sh'''
                            echo "domain_name=${domain_name}" | tee -a terraform.tfvars
                            echo "docker_username=${DOCKERHUB_USER}" | tee -a terraform.tfvars
                            echo "docker_password=${DOCKERHUB_SECRET}" | tee -a terraform.tfvars
                        '''

                        sh'''
                            terraform plan -out docker.plan
                        '''

                        sshagent(['meetup_ssh']) {
                            sh'''
                                terraform apply docker.plan
                            '''
                        }
                    }
                }
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}